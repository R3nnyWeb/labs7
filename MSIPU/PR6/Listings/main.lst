


ARM Macro Assembler    Page 1 


    1 00000000         ;PR_6
    2 00000000                 area             reset, data, readonly
    3 00000000                 area             stack, noinit, readwrite
    4 00000000                 space            0x400
    5 00000400         stack_top
    6 00000400                 area             program,code,readonly
    7 00000000 00000000        dcd              stack_top
    8 00000004 00000000        dcd              start
    9 00000008                 entry
   10 00000008         start
   11 00000008 F000 F801       bl               pp1
   12 0000000C         ; bl pp2
   13 0000000C         ;  bl pp3
   14 0000000C E7FE    m       b                m
   15 0000000E         pp1
   16 0000000E 4844            ldr              r0, = func3 ;baza X(k)
   17 00000010 F04F 0100       mov              r1, #0      ;index l
   18 00000014 F04F 5200       mov              r2, #0x20000000 ;baza Y(n)
   19 00000018 F04F 0300       mov              r3, #0      ; index n
   20 0000001C F04F 0600       mov              r6, #0      ;y(n)
   21 00000020         m1
   22 00000020 5645            ldrsb            r5, [r0,r1] ; x(n)
   23 00000022 EBA5 0706       sub              r7, r5, r6  ; (x(n) - y(n))
   24 00000026 EB06 08A7       add              r8, r6, r7, asr #2 ; y(n + 1)
   25 0000002A F802 8003       strb             r8, [r2,r3] ;write y(n + 1)
   26 0000002E 4646            mov              r6, r8      ;new y(n)
   27 00000030 F101 0101       add              r1, #1      ;k = k + 1
   28 00000034 F001 010F       and              r1, #0x0f   ; cout mod 16
   29 00000038 F103 0301       add              r3, #1      ; n++
   30 0000003C F013 031F       ands             r3, #0x01f  ; cout mod 32
   31 00000040 2B00            cmp              r3, #0x00
   32 00000042 D1ED            bne              m1
   33 00000044 4770            bx               lr
   34 00000046         pp2
   35 00000046 4837            ldr              r0, =func5  ; baza X(k)
   36 00000048 F04F 0100       mov              r1, #0      ;index k
   37 0000004C 4A36            ldr              r2, = 0x20000020 ;baza Y(n)
   38 0000004E F04F 0300       mov              r3, #0      ;index n
   39 00000052 F04F 0500       mov              r5, #0      ; x(n)
   40 00000056 F04F 0600       mov              r6, #0      ;y(n+1)
   41 0000005A 5647    m2      ldrsb            r7, [r0,r1] ;x(n+1)
   42 0000005C 46B8            mov              r8, r7      ; r8= x(n+1)
   43 0000005E EBA8 0805       sub              r8, r5      ;-x(n)
   44 00000062 44B0            add              r8, r6      ; +(y(n))
   45 00000064 EBA8 08A6       sub              r8, r6, asr #2 ;r8 = (y(n+1))
   46 00000068 F802 8003       strb             r8, [r2,r3] ;write y(n+1)
   47 0000006C 463D            mov              r5, r7      ; new x(n)
   48 0000006E 4646            mov              r6, r8      ; new y(n)
   49 00000070 F101 0101       add              r1, #1      ;k = k + 1
   50 00000074 F001 010F       and              r1, #0x0f
   51 00000078 F103 0301       add              r3, #1      ;n++
   52 0000007C F013 031F       ands             r3, #0x01f
   53 00000080 2B00            cmp              r3, #0x00
   54 00000082 D1EA            bne              m2
   55 00000084 4770            bx               lr
   56 00000086 4827    pp3     ldr              r0, = func5 ;baza X(n) 
   57 00000088 F04F 0100       mov              r1, #0      ;undex n 
   58 0000008C 4A28            ldr              r2,= 0x20000040 ;baza Y(k)
   59 0000008E F04F 0300       mov              r3, #0      ;undex k 



ARM Macro Assembler    Page 2 


   60 00000092 F04F 0400       mov              r4, #0      ;x(n) 
   61 00000096 F04F 0500       mov              r5, #0      ;x(n-l)
   62 0000009A F04F 0600       mov              r6, #0      ;x(nl2)
   63 0000009E F04F 0700       mov              r7, #0      ;x(n-3)
   64 000000A2 EBA8 0807 
                       m3      sub              r8, r7      ;s:=s-x(n-3)
   65 000000A6 4637            mov              R7, r6      ;nev x(n-3)
   66 000000A8 462E            mov              R6, r5      ;nev x(n-2)
   67 000000AA 4625            mov              R5, r4      ;nev x(n-l)        
                                                                 
   68 000000AC 5644            ldrsb            r4,[r0,r1]  ;nev x(n) 
   69 000000AE 44A0            add              r8, r4      ;s:=s+ y(n)
   70 000000B0 EA4F 09A8       mov              r9, r8, asr # 2 ;r8= s/4
   71 000000B4 F802 9003       strb             r9, [r2, r3] ;write y(n+l) 
   72 000000B8 F101 0101       add              r1, #1      ;n =n + 1
   73 000000BC F001 010F       and              r1, #0x0f
   74 000000C0 F103 0301       add              r3, #1      ;k:= k+1
   75 000000C4 F013 031F       ands             r3, #0x01f
   76 000000C8 2B00            cmp              r3, #0x00
   77 000000CA D1EA            bne              m3
   78 000000CC 4770            bx               lr
   79 000000CE         func1
   80 000000CE 78 78 78 
              78               dcb              120,120,120,120
   81 000000D2 78 78 78 
              78               dcb              120,120,120,120
   82 000000D6 14 14 14 
              14               dcb              20,20,20,20
   83 000000DA 14 14 14 
              14               dcb              20,20,20,20
   84 000000DE         func2
   85 000000DE 78 78 14 
              14               dcb              120,120,20,20
   86 000000E2 78 78 14 
              14               dcb              120,120,20,20
   87 000000E6 78 78 14 
              14               dcb              120,120,20,20
   88 000000EA 78 78 14 
              14               dcb              120,120,20,20
   89 000000EE         func3
   90 000000EE 00 26 47 
              5C               dcb              0,38,71,92
   91 000000F2 64 5C 47 
              26               dcb              100,92,71,38
   92 000000F6 00 DA B9 
              A4               dcb              0,-38,-71,-92
   93 000000FA 9C A4 B9 
              DA               dcb              -100,-92,-71,-38
   94 000000FE         func4
   95 000000FE 00 64 00 
              9C               dcb              0,100,0,-100
   96 00000102 00 64 00 
              9C               dcb              0,100,0,-100
   97 00000106 00 64 00 
              9C               dcb              0,100,0,-100
   98 0000010A 00 64 00 
              9C               dcb              0,100,0,-100
   99 0000010E         func5
  100 0000010E 00 47 64 



ARM Macro Assembler    Page 3 


              47               dcb              0,71,100,71
  101 00000112 00 B9 9C 
              B9               dcb              0,-71,-100,-71
  102 00000116 00 47 64 
              47               dcb              0,71,100,71
  103 0000011A 00 B9 9C 
              B9               dcb              0,-71,-100,-71
  104 0000011E                 end
              00 00 00000000 
              00000000 
              20000020 
              00000000 
              20000040 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\Keil_v5
\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc 
-IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISI
ON_VERSION SETA 526" --predefine="USE_MDR32F9Q2_Rev1 SETA 1" --list=.\listings\
main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

reset 00000000

Symbol: reset
   Definitions
      At line 2 in file main.s
   Uses
      None
Comment: reset unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

stack 00000000

Symbol: stack
   Definitions
      At line 3 in file main.s
   Uses
      None
Comment: stack unused
stack_top 00000400

Symbol: stack_top
   Definitions
      At line 5 in file main.s
   Uses
      At line 7 in file main.s
Comment: stack_top used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

func1 000000CE

Symbol: func1
   Definitions
      At line 79 in file main.s
   Uses
      None
Comment: func1 unused
func2 000000DE

Symbol: func2
   Definitions
      At line 84 in file main.s
   Uses
      None
Comment: func2 unused
func3 000000EE

Symbol: func3
   Definitions
      At line 89 in file main.s
   Uses
      At line 16 in file main.s
Comment: func3 used once
func4 000000FE

Symbol: func4
   Definitions
      At line 94 in file main.s
   Uses
      None
Comment: func4 unused
func5 0000010E

Symbol: func5
   Definitions
      At line 99 in file main.s
   Uses
      At line 35 in file main.s
      At line 56 in file main.s

m 0000000C

Symbol: m
   Definitions
      At line 14 in file main.s
   Uses
      At line 14 in file main.s
Comment: m used once
m1 00000020

Symbol: m1
   Definitions
      At line 21 in file main.s
   Uses
      At line 32 in file main.s
Comment: m1 used once
m2 0000005A




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: m2
   Definitions
      At line 41 in file main.s
   Uses
      At line 54 in file main.s
Comment: m2 used once
m3 000000A2

Symbol: m3
   Definitions
      At line 64 in file main.s
   Uses
      At line 77 in file main.s
Comment: m3 used once
pp1 0000000E

Symbol: pp1
   Definitions
      At line 15 in file main.s
   Uses
      At line 11 in file main.s
Comment: pp1 used once
pp2 00000046

Symbol: pp2
   Definitions
      At line 34 in file main.s
   Uses
      None
Comment: pp2 unused
pp3 00000086

Symbol: pp3
   Definitions
      At line 56 in file main.s
   Uses
      None
Comment: pp3 unused
program 00000000

Symbol: program
   Definitions
      At line 6 in file main.s
   Uses
      None
Comment: program unused
start 00000008

Symbol: start
   Definitions
      At line 10 in file main.s
   Uses
      At line 8 in file main.s
Comment: start used once
14 symbols
352 symbols in table
